/// @dev We only need to worry about a single function, so we can
/// avoid worrying about the selector.
#define macro MAIN() = {
    DO_THE_THING(0x04)          // [x]
    DO_THE_THING(0x24)          // [x, x]
    DO_THE_THING(0x44)          // [x, x, x]
    DO_THE_THING(0x64)          // [x, x, x, x]
    DO_THE_THING(0x84)          // [x, x, x, x, x]

    msize returndatasize return
}

/// @dev This leaves `x` on the stack, but we can ignore that value
#define macro DO_THE_THING(ptr) = returns (1) {
    <ptr> calldataload          // [arr[ptr]]
    IDK_ANYMORE()               // [sqrt(arr[ptr]), x]
    msize mstore                // [x]
}

/// Based off of https://github.com/Vectorized/solady/blob/main/src/utils/FixedPointMathLib.sol#L328
#define macro IDK_ANYMORE() = takes (1) returns (2) {
    // Input stack:                [x]

    0xb0000000                  // [z, x]

    dup1 dup3 div               // [x / z, z, x]
    add                         // [x / z + z, x]
    chainid shr                 // [z, x]
    dup1 dup3 div               // [x / z, z, x]
    add                         // [x / z + z, x]
    chainid shr                 // [z, x]
    dup1 dup3 div               // [x / z, z, x]
    add                         // [x / z + z, x]
    chainid shr                 // [sqrt(x), x]

    0x3B9ACA00 mul              // [sqrt(x) * 1e9, x]

    // Return stack:               [result, x]
}
